# ==============================
# Project configuration
# ==============================
ROOT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
SRC_DIR := $(ROOT_DIR)src
OBJ_DIR := $(ROOT_DIR)obj
OUT_DIR := $(ROOT_DIR)output

# Executables
TARGETS := inference_driver pipelined_inference_driver

# Source groups
COMMON_SRCS := inference_driver_internals.cpp util.cpp
INFERENCE_DRIVER_SRCS := inference_driver.cpp
PIPELINED_DRIVER_SRCS := pipelined_inference_driver.cpp

# Convert sources to objects
COMMON_OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(COMMON_SRCS))
INFERENCE_DRIVER_OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(INFERENCE_DRIVER_SRCS)) $(COMMON_OBJS)
PIPELINED_DRIVER_OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(PIPELINED_DRIVER_SRCS)) $(COMMON_OBJS)

# Final targets
INFERENCE_DRIVER_BIN := $(OUT_DIR)/inference_driver_internals
PIPELINED_DRIVER_BIN := $(OUT_DIR)/pipelined_inference_driver

# Compiler & flags
CXX := g++
CXXFLAGS := -std=c++17 -w
LDFLAGS := -Wl,-rpath=\$$ORIGIN/../lib \
	-lpthread \
	-ltensorflowlite \
	-ltensorflowlite_gpu_delegate -lEGL -lGLESv2 \
	-lopencv_core -lopencv_imgproc -lopencv_imgcodecs \
	-ljsoncpp

# Include directories
INCS := -I$(ROOT_DIR)inc \
	-I/usr/include \
	-I/usr/include/opencv4 \
	-I$(ROOT_DIR)/external/litert

# Library search paths
LIBS := -Llib

# ==============================
# Targets
# ==============================
.PHONY: all clean

all: $(INFERENCE_DRIVER_BIN) $(PIPELINED_DRIVER_BIN)
	@echo "Build completed successfully."

# Build inference_driver
$(INFERENCE_DRIVER_BIN): $(INFERENCE_DRIVER_OBJS)
	@mkdir -p $(OUT_DIR)
	$(CXX) $(CXXFLAGS) $(INCS) $(LIBS) $^ -o $@ $(LDFLAGS)

# Build pipelined_inference_driver
# $(PIPELINED_DRIVER_BIN): $(PIPELINED_DRIVER_OBJS)
# 	@mkdir -p $(OUT_DIR)
# 	$(CXX) $(CXXFLAGS) $(INCS) $(LIBS) $^ -o $@ $(LDFLAGS)

# Compile objects
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(OBJ_DIR)
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

# Clean build artifacts
clean:
	rm -rf $(OBJ_DIR) $(OUT_DIR)
